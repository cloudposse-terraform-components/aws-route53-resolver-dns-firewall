name: "aws-route53-resolver-dns-firewall"
# Canonical GitHub repo
github_repo: "cloudposse-terraform-components/aws-route53-resolver-dns-firewall"
# Short description of this project
description: |-
  This component is responsible for provisioning
  [Route 53 Resolver DNS Firewall](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-dns-firewall.html)
  resources, including Route 53 Resolver DNS Firewall, domain lists, firewall rule groups, firewall rules, and logging
  configuration.
usage: |-
  **Stack Level**: Regional

  Here's an example snippet for how to use this component.

  ```yaml
  # stacks/catalog/route53-resolver-dns-firewall/defaults.yaml
  components:
    terraform:
      route53-resolver-dns-firewall/defaults:
        metadata:
          type: abstract
        settings:
          spacelift:
            workspace_enabled: true
        vars:
          enabled: true
          firewall_fail_open: "ENABLED"
          query_log_enabled: true
          logs_bucket_component_name: "route53-resolver-dns-firewall-logs-bucket"
          domains_config:
            allowed-domains:
              # Concat the lists of domains passed in the `domains` field and loaded from the file `domains_file`
              # The file is in the `components/terraform/route53-resolver-dns-firewall/config` folder
              domains_file: "config/allowed_domains.txt"
              domains: []
            blocked-domains:
              # Concat the lists of domains passed in the `domains` field and loaded from the file `domains_file`
              # The file is in the `components/terraform/route53-resolver-dns-firewall/config` folder
              domains_file: "config/blocked_domains.txt"
              domains: []
          rule_groups_config:
            blocked-and-allowed-domains:
              # 'priority' must be between 100 and 9900 exclusive
              priority: 101
              rules:
                allowed-domains:
                  firewall_domain_list_name: "allowed-domains"
                  # 'priority' must be between 100 and 9900 exclusive
                  priority: 101
                  action: "ALLOW"
                blocked-domains:
                  firewall_domain_list_name: "blocked-domains"
                  # 'priority' must be between 100 and 9900 exclusive
                  priority: 200
                  action: "BLOCK"
                  block_response: "NXDOMAIN"
  ```

  ```yaml
  # stacks/mixins/stage/dev.yaml
  import:
    - catalog/route53-resolver-dns-firewall/defaults

  components:
    terraform:
      route53-resolver-dns-firewall/example:
        metadata:
          component: route53-resolver-dns-firewall
          inherits:
            - route53-resolver-dns-firewall/defaults
        vars:
          name: route53-dns-firewall-example
          vpc_component_name: vpc
  ```

  Execute the following command to provision the `route53-resolver-dns-firewall/example` component using Atmos:

  ```shell
  atmos terraform apply route53-resolver-dns-firewall/example -s <stack>
  ```

  <!-- prettier-ignore-start -->
  <!-- prettier-ignore-end -->
references:
  - name: Deploy centralized traffic filtering using AWS Network Firewall
    url: https://aws.amazon.com/blogs/networking-and-content-delivery/deploy-centralized-traffic-filtering-using-aws-network-firewall
    description: ""
  - name: AWS Network Firewall â€“ New Managed Firewall Service in VPC
    url: https://aws.amazon.com/blogs/aws/aws-network-firewall-new-managed-firewall-service-in-vpc
    description: ""
  - name: Deployment models for AWS Network Firewall
    url: https://aws.amazon.com/blogs/networking-and-content-delivery/deployment-models-for-aws-network-firewall
    description: ""
  - name: Deployment models for AWS Network Firewall with VPC routing enhancements
    url: https://aws.amazon.com/blogs/networking-and-content-delivery/deployment-models-for-aws-network-firewall-with-vpc-routing-enhancements
    description: ""
  - name: Inspection Deployment Models with AWS Network Firewall
    url: https://d1.awsstatic.com/architecture-diagrams/ArchitectureDiagrams/inspection-deployment-models-with-AWS-network-firewall-ra.pdf
    description: ""
  - name: How to deploy AWS Network Firewall by using AWS Firewall Manager
    url: https://aws.amazon.com/blogs/security/how-to-deploy-aws-network-firewall-by-using-aws-firewall-manager
    description: ""
  - name: A Deep Dive into AWS Transit Gateway
    url: https://www.youtube.com/watch?v=a55Iud-66q0
    description: ""
  - name: Appliance in a shared services VPC
    url: https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-appliance-scenario.html
    description: ""
  - name: Quotas on Route 53 Resolver DNS Firewall
    url: https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver
    description: ""
  - name: Unified bad hosts
    url: https://github.com/StevenBlack/hosts
    description: ""
  - name: cloudposse-terraform-components
    url: https://github.com/orgs/cloudposse-terraform-components/repositories
    description: Cloud Posse's upstream component
tags:
  - component/route53-resolver-dns-firewall
  - layer/unassigned
  - provider/aws
# Categories of this project
categories:
  - component/route53-resolver-dns-firewall
  - layer/unassigned
  - provider/aws
# License of this project
license: "APACHE2"
# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse-terraform-components/aws-route53-resolver-dns-firewall.svg?style=for-the-badge
    url: https://github.com/cloudposse-terraform-components/aws-route53-resolver-dns-firewall/releases/latest
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com
related:
  - name: "Cloud Posse Terraform Modules"
    description: Our collection of reusable Terraform modules used by our reference architectures.
    url: "https://docs.cloudposse.com/modules/"
  - name: "Atmos"
    description: "Atmos is like docker-compose but for your infrastructure"
    url: "https://atmos.tools"
contributors: [] # If included generates contribs
